<!DOCTYPE html>
<html>
<head>
    <title>Everafter Dashboard</title>
    <meta name="description" content="An elegant app for real-time photo sharing at weddings and events.">
    <meta name="keywords" content="Event photograph sharing, Photo sharing app, Event planning, Wedding photography,Wedding TV, Wedding screen, TV at wedding, Party photography, Concert photography, Event photo upload, Private photo sharing, Event slideshow, Real-time photo sharing, Best photo sharing app for events, How to collect wedding photos from guests, Real-time slideshow for parties, Secure photo upload for events, Event photography tips and tricks, Crowd-sourced event photography, Photo sharing solutions for event planners, Download event photos in bulk, Private directory for event photos, Share full-resolution photos online, Corporate event photo sharing, Festival photography app, Art gallery opening photography, Charity event photo collection, School event photography, Sports event photo sharing, Family reunion photo app, Church event photography, Trade show photo upload, Virtual event photography">
    <meta property="og:title" content="Everafter: Elegant Real-Time Photo Sharing for Events">
    <meta property="og:description" content="An app for real-time photo sharing at weddings and events. Take complete control of your event photos.">
    <meta property="og:image" content="https://everafter.pics/images/everafter_opengraph.png">
    <meta property="og:url" content="https://everafter.pics">
    <meta property="og:type" content="website">
    <link rel="stylesheet" href="/css/styles.css">
    <link rel="stylesheet" href="https://www.w3schools.com/w3css/4/w3.css">
    <!--<script src="/js/ea.js"></script> -->
    <script src="https://kit.fontawesome.com/c72e3efc2c.js" crossorigin="anonymous"></script>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Averia+Serif+Libre:ital,wght@0,300;0,400;0,700;1,300;1,400;1,700&display=swap" rel="stylesheet">

    <meta name="viewport" content="width=device-width, initial-scale=1">

    <script type="text/javascript">
      (function(c,l,a,r,i,t,y){
          c[a]=c[a]||function(){(c[a].q=c[a].q||[]).push(arguments)};
          t=l.createElement(r);t.async=1;t.src="https://www.clarity.ms/tag/"+i;
          y=l.getElementsByTagName(r)[0];y.parentNode.insertBefore(t,y);
      })(window, document, "clarity", "script", "j1edop3vjd");
  </script>

<script>

  // Toggle Livefeed button for public
  document.addEventListener('DOMContentLoaded', function() {
    const liveFeedToggle = document.getElementById('liveFeedToggle');

    liveFeedToggle.addEventListener('change', function() {
      fetch('/update-livefeed-status', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          username: '<%= user.username %>',
          liveFeedEnabled: liveFeedToggle.checked,
        }),
      })
      .then(response => response.json())
      .then(data => {
        if (!data.success) {
          console.error('Failed to update live feed status');
        }
      });
    });
  });

  

</script>

<style>

    /* The container */
    .livecheck {
  /*display: block;*/
  position: relative;
  padding-left: 35px;
  padding-top: 5px;
  margin-bottom: 12px;
  cursor: pointer;
  font-size: .7em;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  transition: all .3s;
}

/* Hide the browser's default checkbox */
.livecheck input {
  position: absolute;
  opacity: 0;
  cursor: pointer;
  height: 0;
  width: 0;
}

/* Create a custom checkbox */
.checkmark {
  position: absolute;
  top: 7px;
  left: 0;
  height: 25px;
  width: 25px;
  background-color: #72122C;
  border: 0.25em solid currentColor;
  border-radius: 0.15em;
  transition: all .3s;
}

/* On mouse-over, add a grey background color */
.livecheck:hover input ~ .checkmark {
  background-color: #189136;
  transition: all .3s;
}

/* When the checkbox is checked, add a blue background */
.livecheck input:checked ~ .checkmark {
  background-color: green;
  transition: all .3s;
}

/* Create the checkmark/indicator (hidden when not checked) */
.checkmark:after {
  content: "";
  position: absolute;
  display: none;
}

/* Show the checkmark when checked */
.livecheck input:checked ~ .checkmark:after {
  display: block;
}

/* Style the checkmark/indicator */
.livecheck .checkmark:after {
  left: 8px;
  top: 4px;
  width: 5px;
  height: 10px;
  border: solid white;
  border-width: 0 3px 3px 0;
  -webkit-transform: rotate(45deg);
  -ms-transform: rotate(45deg);
  transform: rotate(45deg);
  transition: all .3s;
}

.switch {
  position: relative;
  display: inline-block;
  width: 60px;
  height: 34px;
}

.switch input {
  opacity: 0;
  width: 0;
  height: 0;
}

.slider {
  position: absolute;
  cursor: pointer;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: #ccc;
  transition: .4s;
}

.slider:before {
  position: absolute;
  content: "";
  height: 26px;
  width: 26px;
  left: 4px;
  bottom: 4px;
  background-color: white;
  transition: .4s;
}

input:checked + .slider {
  background-color: #27dc0f;
}

input:focus + .slider {
  box-shadow: 0 0 1px #08973a;
}

input:checked + .slider:before {
  transform: translateX(26px);
}

/* Rounded sliders */
.slider.round {
  border-radius: 34px;
}

.slider.round:before {
  border-radius: 50%;
}

.slidersidetext {
  padding-left: 20vw;
  padding-right: 20vw;
  padding-top: 5px;
  margin-bottom: 12px;
  /* max-width: 300px; */
  cursor: pointer;
  /* font-size: .7em; */

}
#setupmenuopenclosed {
    transition: max-height 0.3s ease-out, opacity 0.3s ease-out;
    overflow: hidden;
    max-height: 0; /* This will initially hide the content */
    opacity: 0;
    text-align: center; 
    padding-bottom: 50px;
}

#OKGOmenuopenclosed {
    transition: max-height 0.3s ease-out, opacity 0.3s ease-out;
    overflow: hidden;
    max-height: 0; /* This will initially hide the content */
    opacity: 0;
    text-align: center;
    padding-bottom: 50px;
}
#setupFunction {
    transition: max-height 0.3s ease-out, opacity 0.3s ease-out;
    overflow: hidden;
    max-height: 0; /* This will initially hide the content */
    opacity: 0;
}

  </style>



</head>
<body>
 

  <div class="maincontainer">
    <img class="dashlogo" src="/images/ea_large_logo_full_blk.png">
    <h4>Welcome, <%= user.username %> </h4>

    <% if (locals.success) { %>
        <p class="success-message"><%= success %></p>
    <% } %>




   <!-- livefeed checkbox  OLD 
<label for="liveFeedToggle">Enable View Live Feed Button for Guests:</label>
<input type="checkbox" id="liveFeedToggle" <%= liveFeedEnabled ? "checked" : "" %>> -->


<button class="eabutton" title="(Just a couple of things to do before you get started uploading images)" onclick="setupFunction()">SETUP</button>
<br>



<div id="setupmenuopenclosed" >

  <!-- livefeed checkbox  -->
<label for="liveFeedToggle" class="livecheck">
<input type="checkbox" id="liveFeedToggle" <%= liveFeedEnabled ? "checked" : "" %>>
<span class="checkmark"></span>
</label><br><br><br>Toggle the "View Live Feed" Button on or off for all Guests. <br>
*Turn this off (not green) if you want to keep everything really private. Guests won't get a link to the live feed from  <br>
their upload page. They will only be able to upload, and not to see what has been uploaded (Unless you put it up on a big screen). <br>
<!-- End livefeed checkbox  -->




<!-- <a href="/moderation/<%= user.username %>" target="_blank"> <p class="eabutton" title="(this is where you will moderate incoming images)">Moderate Uploaded Images </p></a> -->


<!-- moderation checkbox  -->
<label class="switch"> 
<input type="checkbox" id="moderationToggle" checked>
<span class="slider round"></span>
</label> <p class="slidersidetext">When this switch is green you have enabled image moderation. 
No images will be visible in your live-feed until you approve them. To do that click the button labeled "Moderate Uploaded Images" that will appear below.</p>
<!-- end moderation checkbox  -->



<br>
<!-- Trigger/Open the QR Modal -->
<button onclick="document.getElementById('id01').style.display='block'"class="eabutton" title="(for easy sharing the upload link with your guests)"></i> Your Event QR Code </button>


<!-- The QR Modal -->
<div id="id01" class="w3-modal">
<div class="w3-modal-content">
<div class="qr-container">
<span onclick="document.getElementById('id01').style.display='none'"
class="w3-button w3-display-topright">&times;</span>
<a href="<%= qrCodeDataURL %>" download><img src="<%= qrCodeDataURL %>" alt="Your QR Code" class="w3-image eacenter"></a> <br>
<p>Above is a custom QR code generated just for you that you can use to share with event guests to allow them to upload images. They can point their phone's
   camera at it and then click on the link it generates. It's much easier than typing it in to a web browser.
  If you click (or tap) on it it will download to your device so you can print it, or even upload it to the live feed so all your
   guests can see it and start uploading pictures for you.</p><br><br><br>
</div>
</div>
</div>
<br><br>
<a href="/download/<%= user.username %>"" class="eabutton" title="Grab every image from your event in a single zip file">One Click Download </a> 
</div>
<!-- END OF SETUP DIV -->


<button class="eabutton" title="(Let's start uploading and maybe moderating images for the live feed)" onclick="OKGOFunction()">OK GO</button>
<br>

<div id="OKGOmenuopenclosed">
<!-- moderation button div starts here -->
<div id="moderation_button_toggle">
<a href="/moderation/<%= user.username %>" target="_blank"> <p class="eabutton" title="(this is where you will moderate incoming images)">Moderate Uploaded Images </p></a>
</div>
<!-- moderation button div ENDS here -->

<!-- UPLOAD IMAGES STARTS HERE -->



 <a href="/admin-upload/<%= user.username %>"> <p class="eabutton" 
    title="(because uploading isn't just for guests. You can upload whatever you like, as long as it is a png, jpg or gif)">Upload Images </p></a>
 
<!-- UPLOAD IMAGES ENDS HERE -->




    <br>
    <a href="/livefeed_public/<%= user.username %>" target="_blank"> <p class="eabutton" title="(this is what you can send to the big screen. it opens here in a new window)">View the Live Feed </p></a>
    
  
   
<br><br>

    <!-- Trigger/Open the Help Modal -->
    <button onclick="document.getElementById('id02').style.display='block'"
    class="eabutton">Help!</button>
    
    <!-- The help Modal -->
    <div id="id02" class="w3-modal">
      <div class="w3-modal-content">
        <div class="qr-container">
          <span onclick="document.getElementById('id02').style.display='none'"
          class="w3-button w3-display-topright">&times;</span>
          <div class="helptext">
          <h3>Everafter is really simple</h3>
          <p>Upload a file and it becomes viewable on your own custom live feed. That's really the main bit. </p> 
          <p>To upload an image, guests don't even need to be logged in, they just need a simple web link.
            They can get that link easily by either scanning the QR code that is generated for you when you click on the QR Code button in the dashboard (or the one we just generated for you below), or they can just type it out as 
            they are usually pretty simple, it will be something like everafter.pics/livefeed/yourusername. When guests visit that link, they are presented with a nice little interface where they can immediately start uploading files.
            There's also a handy link for them to view the live feed that they can view directly on their own device.</p>

            <img src="<%= qrCodeDataURL %>" alt="Your QR Code" class="smallqr"><br><br>



          <h3>You are in control</h3>
          <p>The primary account possesses moderator functions. Essentially, this grants the ability to oversee uploads and, if necessary, delete files. To moderate images,
             the user should click the toolbar <i class="fa-solid fa-gear" style="color: #96969e;"></i> located at the top right corner of the Live Feed page and then select the <i class="fa-solid fa-image" style="color: #96969e;"></i> moderation icon. This action will display a gallery
              of all uploaded images. Each image will feature a <i class="fa-solid fa-delete-left" style="color: #d90d0d;"></i> red delete icon in its top right corner. A single click on this red icon will remove the image from the Live
               Feed. Subsequently, the removed image will be archived in a "deleted" folder, which will be incorporated into the one-click downloadable zip file after the
                event concludes."</p>


          

            <img src="/images/help_moderate.png"alt="using the moderation functions image" class="smallqr"> <br><br>
          
            <h3>You get the goods</h3>
            <p>When the event is over, the event host can download every file that was shared by guests in one convenient zip file. Archive it for saffety, or because you aren't scraping images from some social media platform, for printing.
              <br><br><br><br>
             <p class="eacenter">Still have questions? Read our <a href="/faq.html"target="_blank">F.A.Q. here </a>, or contact us at <a href="mailto:customersupport@everafter.pics"target="_blank">  customersupport@everafter.pics</a></p>  
          </div>
        </div>
      </div>
    </div>
  </div>



  

</div>

<script>

// function setupFunction() {
//   var x = document.getElementById("setupmenuopenclosed");
//   if (x.style.display === "none") {
//     x.style.display = "block";
//   } else {
//     x.style.display = "none";
//   }
// }

function setupFunction() {
    var x = document.getElementById("setupmenuopenclosed");
    if (x.style.maxHeight === "0px" || x.style.maxHeight === '') {
        x.style.maxHeight = "500px";  // or whatever maximum height you expect the content to have
        x.style.opacity = "1";
    } else {
        x.style.maxHeight = "0px";
        x.style.opacity = "0";
    }
}

function OKGOFunction() {
    var x = document.getElementById("OKGOmenuopenclosed");
    if (x.style.maxHeight === "0px" || x.style.maxHeight === '') {
        x.style.maxHeight = "500px";  // or whatever maximum height you expect the content to have
        x.style.opacity = "1";
    } else {
        x.style.maxHeight = "0px";
        x.style.opacity = "0";
    }
}


  // Get the modals
  var modal1 = document.getElementById('id01');
  var modal2 = document.getElementById('id02');
  
  // When the user clicks anywhere outside of the modal, close it
  window.onclick = function(event) {
    if (event.target == modal1) {
      modal1.style.display = "none";
    }
    if (event.target == modal2) {
      modal2.style.display = "none";
    }
  }

// Toggle moderation

document.getElementById('moderationToggle').addEventListener('change', function() {
  const username = '<%= user.username %>';  // Replace with the actual username or retrieve it dynamically
  
  // Get the moderation_button_toggle div
  var moderationButtonToggleDiv = document.getElementById('moderation_button_toggle');
  
  // Toggle the display of the moderation_button_toggle div
  moderationButtonToggleDiv.style.display = this.checked ? 'block' : 'none';

  fetch('/toggle-moderation', {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
    },
    body: JSON.stringify({
      username: username,  // Include the username field in the request body
      moderation: this.checked,  // Send the new moderation state to the server
    }),
  })
  .then(response => response.json())
  .then(data => {
    console.log('Success:', data);
  })
  .catch((error) => {
    console.error('Error:', error);
  });
});

// document.getElementById('moderationToggle').addEventListener('change', function() {
//   const username = '<%= user.username %>';  // Replace with the actual username or retrieve it dynamically

//   fetch('/toggle-moderation', {
//     method: 'POST',
//     headers: {
//       'Content-Type': 'application/json',
//     },
//     body: JSON.stringify({
//       username: username,  // Include the username field in the request body
//       moderation: this.checked,  // Send the new moderation state to the server
//     }),
//   })
//   .then(response => response.json())
//   .then(data => {
//     console.log('Success:', data);
//   })
//   .catch((error) => {
//     console.error('Error:', error);
//   });
// });


</script>


<br><br><br><!-- Include footer -->
  <%- include('partials/footer') %>
</body>
</html>
